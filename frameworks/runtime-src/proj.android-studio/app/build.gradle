apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.jenkins.test"
        minSdkVersion 10
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
		
		externalNativeBuild {
            ndkBuild {
                targets 'cocos2djs'
                arguments '-j' + Runtime.runtime.availableProcessors()
                abiFilters 'armeabi'
			}
		}
		
		ndk {
			moduleName "libcocos2djs"
            abiFilters 'armeabi'
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }
	
	externalNativeBuild {
        ndkBuild {
            path "jni/Android.mk"
        }
    }

    signingConfigs {
       release {
			if (project.hasProperty("STORE_FILE")) {
				storeFile file(STORE_FILE)
				storePassword STORE_PASSWORD
				keyAlias KEY_ALIAS
				keyPassword KEY_PASSWORD
			}
        }
    }

    buildTypes {
        release {
			// 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
	
	applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // apk_渠道名-版本号-版本名称-编译时间.apk
                def fileName = "release.apk"
                outputFileName = fileName
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
}
